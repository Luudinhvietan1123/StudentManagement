/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sevice;
import Entity.Student;
 // import Sevice.InsertStudent;
import Sevice.updateService;
import static java.awt.event.PaintEvent.UPDATE;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


/**
 *
 * @author anhaa
 */
public class updateDisplay extends javax.swing.JFrame {
    static String studentId;
    static String StudentName;
    private static Student student;
    static String studentName;
    static String dateOfBirth;
    static String homeTown;
    static int academicYear;
    static float CPA;
    static String mayjor;
    static String mail;
    static String phoneNumber;

    /**
     * Creates new form updateDisplay
     */
    public updateDisplay() {
        initComponents();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jtfHomeTown = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfAcedermicYear = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfCPA = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfMayjo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfMail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfPhoneNumber = new javax.swing.JTextField();
        jtfSearchText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        JbtUpdate = new javax.swing.JButton();
        jbtnSearchButton = new javax.swing.JButton();
        jtfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfDateOfBirth = new javax.swing.JTextField();
        jlbError = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfStatus = new javax.swing.JTextField();
        addNewStudent = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jlbErrorName = new javax.swing.JLabel();
        jlbDateError = new javax.swing.JLabel();
        jlbHomeError = new javax.swing.JLabel();
        jlbMSSVError = new javax.swing.JLabel();
        jlbCPAError = new javax.swing.JLabel();
        jlbMayjorError = new javax.swing.JLabel();
        jlbPhoneError = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jlbMailError = new javax.swing.JLabel();
        jlbDelete = new javax.swing.JButton();
        jlbResult = new javax.swing.JLabel();
        jlbAcadermicYearError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("   DateOfBirth");

        jtfHomeTown.setText("   HomeTown...");

        jLabel5.setText("HomeTown ");

        jtfAcedermicYear.setText("   AcedermicYear...");
        jtfAcedermicYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAcedermicYearActionPerformed(evt);
            }
        });

        jLabel6.setText("AcedermicYear");

        jtfId.setText("   MSSV...");
        jtfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIdActionPerformed(evt);
            }
        });

        jLabel7.setText("   MSSV");

        jtfCPA.setText("  CPA...");

        jLabel8.setText("  CPA");

        jtfMayjo.setText("  Mayjo...");

        jLabel9.setText("Mayjor");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("          Chinh Sua Thong Tin Sinh Vien");

        jtfMail.setText("   Mail...");

        jLabel10.setText("   Mail");

        jtfPhoneNumber.setText("  PhoneNumber...");

        jtfSearchText.setText("Nhap MSSV");
        jtfSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchTextActionPerformed(evt);
            }
        });

        jLabel11.setText("PhoneNumber");

        JbtUpdate.setForeground(new java.awt.Color(255, 0, 0));
        JbtUpdate.setText("Update");
        JbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtUpdateActionPerformed(evt);
            }
        });

        jbtnSearchButton.setText("Search");
        jbtnSearchButton.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jbtnSearchButtonAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jbtnSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchButtonActionPerformed(evt);
            }
        });

        jtfName.setText("  Name...");
        jtfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNameActionPerformed(evt);
            }
        });

        jLabel3.setText("   Name");

        jtfDateOfBirth.setText(" DateOfBirth...");
        jtfDateOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDateOfBirthActionPerformed(evt);
            }
        });

        jLabel2.setText("Status ");

        jtfStatus.setText("  Status...");
        jtfStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfStatusActionPerformed(evt);
            }
        });

        addNewStudent.setText("Add New Student");
        addNewStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewStudentActionPerformed(evt);
            }
        });

        jButton1.setText("Quay lai trang truoc");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jlbDelete.setText("Delete Student");
        jlbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlbDeleteActionPerformed(evt);
            }
        });

        jlbResult.setText("         ");

        jlbAcadermicYearError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlbPhoneError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jtfMail, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlbMailError, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 4, Short.MAX_VALUE))))
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfHomeTown, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlbDateError, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfMayjo, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlbMayjorError, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlbMSSVError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfAcedermicYear, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jtfCPA, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jlbCPAError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jlbAcadermicYearError, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jlbHomeError, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(jtfSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnSearchButton)
                                .addGap(18, 18, 18)
                                .addComponent(jlbError, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jlbErrorName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jlbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JbtUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addNewStudent))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jlbResult, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlbError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbErrorName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbDateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfHomeTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbHomeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfId, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfAcedermicYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbAcadermicYearError, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlbDelete)
                                    .addComponent(JbtUpdate)
                                    .addComponent(addNewStudent)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtfCPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlbCPAError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtfMayjo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtfMail, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlbMayjorError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(jlbMailError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jlbPhoneError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(34, 34, 34)))
                        .addComponent(jlbResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbMSSVError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(345, 345, 345))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchTextActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfSearchTextActionPerformed

    private void JbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtUpdateActionPerformed
        //check name
        String name=jtfName.getText();
        boolean condition1   = checkNameHomeTownMayjor(name);          
        //check date
        String DateOfBirth   = jtfDateOfBirth.getText();
        
        //check home
        String HomeTown      = jtfHomeTown.getText();
       boolean condition2   = checkNameHomeTownMayjor(HomeTown);  //check khoa
        int AcedermicYear    = Integer.valueOf(jtfAcedermicYear.getText());  
        String AcedermicYear1 = jtfAcedermicYear.getText();
        boolean check1       = checkAcadermicYear(AcedermicYear1);
        float CPA            = Float.valueOf(jtfCPA.getText());
        //check mayjor
        String Mayjor        = jtfMayjo.getText();
        boolean condition3   = checkNameHomeTownMayjor(Mayjor);
        //check mail
        String Mail          = jtfMail.getText();
    //    boolean check4       = checkMail(Mail);
        String PhoneNumber   = jtfPhoneNumber.getText();
        // check id 
        int MSSV             = Integer.valueOf(jtfId.getText());
        String id            = jtfId.getText();  
        boolean checkid      = checkID(id);
        Student student = new Student(name,DateOfBirth,HomeTown,AcedermicYear,MSSV,CPA,Mayjor,Mail,PhoneNumber);   
    
    if(check1==false)  {
        jlbAcadermicYearError.setText("Khong hop le moi nhap lai !");
    }  
    else if(condition1==false){
        jlbErrorName.setText("Ten khong hop le moi nhap lai !");      
    }
    else if(condition2==false){
        jlbHomeError.setText("Dia chi vua nhap khong hop le !");
    }
    else if(condition3==false){
        jlbMayjorError.setText("Nghe nghiep khong hop le !");    
    }
    else if(checkid==false){
        jlbMSSVError.setText("MSSV khong hop le !");
    } 
    
   
    else if (condition1==true&&condition2==true&&condition3==true&&checkid==true&&check1 ==true){
            try {          
                Update(student);
                jlbResult.setText("Cap nhat thong tin Sinh Vien thanh cong");
            } catch (SQLException ex) {
                Logger.getLogger(updateDisplay.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_JbtUpdateActionPerformed
    }
    private void jbtnSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchButtonActionPerformed
        // TODO add your handling code here:
    
    studentId = jtfSearchText.getText();
     
   // studentName =jtfSearchText.getText();
        
    student = checkStudentExist(Integer.valueOf(studentId));
    // student = checkStudent(studentName);
        if(student!=null){
            ShowInfo(student);
            jlbResult.setText("Da tim thay Sinh Vien");
        }
        else{
            jlbError.setText("Moi nhap lai");
            Error er= new Error();
            er.show();
        }
    }//GEN-LAST:event_jbtnSearchButtonActionPerformed

    private void jbtnSearchButtonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jbtnSearchButtonAncestorAdded
        // TODO add your handling code here:
           
        
        
    }//GEN-LAST:event_jbtnSearchButtonAncestorAdded

    private void jtfAcedermicYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAcedermicYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAcedermicYearActionPerformed

    private void jtfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtfNameActionPerformed

    private void jtfStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfStatusActionPerformed

    private void jtfDateOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDateOfBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDateOfBirthActionPerformed

    private void jtfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIdActionPerformed

    private void addNewStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewStudentActionPerformed
        // TODO add your handling code here:
        String Name          = jtfName.getText();
        String DateOfBirth   = jtfDateOfBirth.getText();
        String HomeTown      = jtfHomeTown.getText();
        int AcedermicYear    = Integer.valueOf(jtfAcedermicYear.getText());
        int MSSV             = Integer.valueOf(jtfId.getText());
        float CPA            = Float.valueOf(jtfCPA.getText());
        String Mayjor        = jtfMayjo.getText();
        String Mail          = jtfMail.getText();
        String PhoneNumber   = jtfPhoneNumber.getText();
    Student student = new Student(Name,DateOfBirth,HomeTown,AcedermicYear,MSSV,CPA,Mayjor,Mail,PhoneNumber);      
        insertData(student);
        jlbResult.setText("Them Sinh Vien thanh cong");
           
    }//GEN-LAST:event_addNewStudentActionPerformed

    private void jlbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlbDeleteActionPerformed
        // TODO add your handling code here:
        String Name          = jtfName.getText();
        String DateOfBirth   = jtfDateOfBirth.getText();
        String HomeTown      = jtfHomeTown.getText();
        int AcedermicYear    = Integer.valueOf(jtfAcedermicYear.getText());
        int MSSV             = Integer.valueOf(jtfId.getText());
        float CPA            = Float.valueOf(jtfCPA.getText());
        String Mayjor        = jtfMayjo.getText();
        String Mail          = jtfMail.getText();
        String PhoneNumber   = jtfPhoneNumber.getText();
        Student student = new Student(Name,DateOfBirth,HomeTown,AcedermicYear,MSSV,CPA,Mayjor,Mail,PhoneNumber);      
        try {
            DeleteStudent(student);
            jlbResult.setText("Xoa Sinh Vien thanh cong");
        } catch (SQLException ex) {
            Logger.getLogger(updateDisplay.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_jlbDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbtUpdate;
    private javax.swing.JButton addNewStudent;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbtnSearchButton;
    private javax.swing.JLabel jlbAcadermicYearError;
    private javax.swing.JLabel jlbCPAError;
    private javax.swing.JLabel jlbDateError;
    private javax.swing.JButton jlbDelete;
    private javax.swing.JLabel jlbError;
    private javax.swing.JLabel jlbErrorName;
    private javax.swing.JLabel jlbHomeError;
    private javax.swing.JLabel jlbMSSVError;
    private javax.swing.JLabel jlbMailError;
    private javax.swing.JLabel jlbMayjorError;
    private javax.swing.JLabel jlbPhoneError;
    private javax.swing.JLabel jlbResult;
    private javax.swing.JTextField jtfAcedermicYear;
    private javax.swing.JTextField jtfCPA;
    private javax.swing.JTextField jtfDateOfBirth;
    private javax.swing.JTextField jtfHomeTown;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfMail;
    private javax.swing.JTextField jtfMayjo;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfPhoneNumber;
    private javax.swing.JTextField jtfSearchText;
    private javax.swing.JTextField jtfStatus;
    // End of variables declaration//GEN-END:variables

    
    
    public Student checkStudentExist(int studentId) {
      
    Statement statement = null;
    try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
     //   System.out.println("Connected to database !");  
        statement = connection.createStatement();
        String sql = "select * from SinhVien.dbo.Students_1";
        ResultSet resultSet = statement.executeQuery(sql);
    while(resultSet.next()){
          resultSet.getInt(5);
    if(resultSet.getInt(5)==studentId){
        Student st= new Student(resultSet.getString(1),
                                resultSet.getString(2),
                                resultSet.getString(3),
                                resultSet.getInt(4),
                                resultSet.getInt(5),
                                resultSet.getFloat(6),
                                resultSet.getString(7),
                                resultSet.getString(8),
                                resultSet.getString(9));
            return st;
              
        }
        }
        }
        catch(SQLException sqle) {
        //System.out.println("Sql Exception :"+sqle.getMessage());
        }
        catch(ClassNotFoundException e) {
        //System.out.println("Class Not Found Exception :" + e.getMessage());
        }
        
        return null;
    }  
    
    
    public void Update(Student updatestudent) throws SQLException{
    Connection conn = null;
    PreparedStatement ps = null;
    Statement statement = null;
       
    try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        } 
    catch (ClassNotFoundException ex) {
            Logger.getLogger(updateDisplay.class.getName()).log(Level.SEVERE, null, ex);
        }
            conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
     //   System.out.println("Connected to database !");  
             statement  = conn.createStatement();
       
    try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
 
      //  System.out.println("Connected to database !");
     
        statement = connection.createStatement();
 
        String sql = "update SinhVien.dbo.Students_1 set Name ='"+ updatestudent.getStudentName()+"',"
                                                        + "DateOFBirth ='" +updatestudent.getDateOfBirth() +"',"
                                                        + " HomeTown='"+updatestudent.getHomeTown()+"',"
                                                        + "AcademicYear="+updatestudent.getAcademicYear()+","
                                                        + "CPA="+updatestudent.getCPA()+","
                                                        + " Mayjor='"+updatestudent.getMayjor()+"',"
                                                        + " Mail='"+updatestudent.getMail()+"', "
                                                        + "PhoneNumber='"+updatestudent.getPhoneNumber()+"' "
                                                        + "where ID="+updatestudent.getStudentId()+"";
        ResultSet resultSet = statement.executeQuery(sql);
    
        connection.close();
    }
    catch(SQLException sqle) {
        System.out.println("Sql Exception :"+sqle.getMessage());
    }
    catch(ClassNotFoundException e) {
        System.out.println("Class Not Found Exception :" + e.getMessage());
    }
   
    }
    public void ShowInfo(Student student) {
       
       jtfName.setText(student.getStudentName());
       jtfDateOfBirth.setText(student.getDateOfBirth());
       jtfHomeTown.setText(student.getHomeTown());
       jtfAcedermicYear.setText(String.valueOf(student.getAcademicYear()));
       jtfId.setText(String.valueOf(student.getStudentId()));
       jtfCPA.setText(String.valueOf(student.getCPA()));
       jtfPhoneNumber.setText(student.getPhoneNumber());        
       jtfMayjo.setText(student.getMayjor());
       jtfMail.setText(student.getMail());
      
        }    

    public  void insertData(Student insertStudent) {
        Statement statement = null;
            try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
 
      //  System.out.println("Connected to database !");
     
    statement = connection.createStatement();
    String sql = "insert into SinhVien.dbo.Students_1 (Name, DateOFBirth, HomeTown, AcademicYear, ID, CPA, Mayjor, Mail, PhoneNumber) values ('"+
            insertStudent.getStudentName() + "','" + 
            insertStudent.getDateOfBirth() +"','" +
            insertStudent.getHomeTown() + "'," +
            insertStudent.getAcademicYear() + "," + 
            insertStudent.getStudentId() + "," +
            insertStudent.getCPA() + ",'" + 
            insertStudent.getMayjor() + "','" + 
            insertStudent.getMail() + "','" + 
            insertStudent.getPhoneNumber() + "')";
    ResultSet resultSet = statement.executeQuery(sql);
    
    connection.close();
        }
            catch(SQLException sqle) {
    System.out.println("Sql Exception :"+sqle.getMessage());
        }
            catch(ClassNotFoundException e) {
    System.out.println("Class Not Found Exception :" + e.getMessage());
        }
    }
    private boolean checkNameHomeTownMayjor(String input){
        //Using regrex to check name
        Pattern pattern = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher matcher = pattern.matcher(input);
        boolean result = matcher.find();
        return result;
    }
    /*
     private boolean checkMail(String input){
        //Using regrex to check name
        Pattern pattern = Pattern.compile("^[a-zA-Z]+[@]+[0-9]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher matcher = pattern.matcher(input);
        boolean result = matcher.find();
        return result;
    }
    */
    private boolean checkAcadermicYear(String input){
        Pattern pattern = Pattern.compile("^[0-9]+");
        Matcher matcher = pattern.matcher(input);
        boolean result = matcher.find();
        return result; 
    }
    private boolean checkID(String input){
        Pattern pattern = Pattern.compile("^[0-9]+");
        Matcher matcher = pattern.matcher(input);
        boolean result = matcher.find();
        return result; 
    }
    public void DeleteStudent(Student deletestudent ) throws SQLException{
     Statement statement = null;
        try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
 
      //  System.out.println("Connected to database !");
     
    statement = connection.createStatement();
    String sql = "Delete from SinhVien.dbo.Students_1 where ID="+deletestudent.getStudentId()+"";           
            ResultSet resultSet = statement.executeQuery(sql);
    
    connection.close();
        }
            catch(SQLException sqle) {
    System.out.println("Sql Exception :"+sqle.getMessage());
        }
            catch(ClassNotFoundException e) {
    System.out.println("Class Not Found Exception :" + e.getMessage());
        }
   
    }
        
        
    
    // update nhung ko truyen doi tuong
    // cai nay van bi loi ko update dc vao database
    /*
     public void Update() throws SQLException{
    Connection conn = null;
    PreparedStatement ps = null;
    Statement statement = null;
       
    try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        } 
    catch (ClassNotFoundException ex) {
            Logger.getLogger(updateDisplay.class.getName()).log(Level.SEVERE, null, ex);
        }
            conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
     //   System.out.println("Connected to database !");  
             statement  = conn.createStatement();
   
       String sql = "update SinhVien.dbo.Students_1  set Name =? ,"
                                                            + " DateOfBirth= ?, "
                                                            + " HomeTown = ? , "
                                                            + " AcadermicYear = ? ,"
                                                            + " CPA = ? ,"
                                                            + " Mayjor = ?,"
                                                            + " Mail = ? ,"
                                                            + "PhoneNumber = ?, where ID =?";
   
    ps=conn.prepareStatement(sql);
    ps.setString(1, jtfName.getText());
    ps.setString(2, jtfDateOfBirth.getText());
    ps.setString(3, jtfHomeTown.getText());
    ps.setInt(4, Integer.valueOf(jtfAcedermicYear.getText()));
    ps.setFloat(6,Float.valueOf(jtfCPA.getText()));
    ps.setString(7,jtfMayjo.getText());
    ps.setString(8,jtfMail.getText());
    ps.setString(9,jtfPhoneNumber.getText());
    ps.setInt(5,Integer.valueOf(jtfId.getText()));
    ps.executeUpdate();
       
    
     }*/
    // tim kiem bang ten nhung van bi loi
   
    public Student checkStudent(String studentName){
     
        Statement statement = null;
        try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SinhVien;user=sa;password=123456;");
       System.out.println("Connected to database !");  
        statement = connection.createStatement();
        String sql = "select * from SinhVien.dbo.Students_1 where Name ="+studentName+"";
        ResultSet resultSet = statement.executeQuery(sql);
     while(resultSet.next()){
        resultSet.getString(1);
       if(resultSet.getString(1)==studentName){
           Student st= new Student(resultSet.getString(1),
                   resultSet.getString(2),
                   resultSet.getString(3),
                   resultSet.getInt(4),
                   resultSet.getInt(5),
                   resultSet.getFloat(6),
                   resultSet.getString(7),
                   resultSet.getString(8),
                   resultSet.getString(9)
                   
           );
           return st;
       } else {
       }
     }
        }
        catch(SQLException sqle) {
        //System.out.println("Sql Exception :"+sqle.getMessage());
        }
        catch(ClassNotFoundException e) {
        //System.out.println("Class Not Found Exception :" + e.getMessage());
        }
        
        return null;
         
        
    }

        }
    
